date:
3/12/18

title:
scrolling text

challenge link: 
https://www.codewars.com/kata/5a995c2aba1bb57f660001fd

solution:
function scrollingText(text){
  text = text.toUpperCase();
  var word = [];
  for (i=0; i<text.length; i++){
  word.push(text)
  text = text.slice(1)+text[0]
 }
 return word;
}

date:
3/13/18

title:
keep up the hoop

challenge link: 
https://www.codewars.com/kata/55cb632c1a5d7b3ad0000145

solution:
function hoopCount(n){
  if(n >= 10){
    return "Great, now move on to tricks";
  }else{
    return "Keep at it until you get it";
  }
}

date:
3/14/18

title:
spanish conjugator

challenge link: 
https://www.codewars.com/kata/5a81b78d4a6b344638000183

solution:
function conjugate(verb){
  var root = verb.slice(0,-2)
  var infinitive = verb.slice(-2)
  var conjugated = {};
  if (infinitive === 'ar'){
    conjugated [verb] = [root + 'o', root + 'as', root + 'a', root + 'amos', root + 'áis', root + 'an'] 
  }
  if (infinitive === 'er'){
    conjugated [verb] =  [root + 'o', root + 'es', root + 'e', root + 'emos', root + 'éis', root + 'en']
  }
    if (infinitive === 'ir'){
    conjugated [verb] =  [root + 'o', root + 'es', root + 'e', root + 'imos', root + 'ís', root + 'en']
  }
  return conjugated; // Un objeto con el verbo conjugado :)
}


date:
3/15/18

title:
reversed strings

challenge link: 
https://www.codewars.com/kata/5168bb5dfe9a00b126000018

Solution:
function solution(str){
 return str.split("").reverse().join("")
}

date:
3/16/18

title:
convert string to a number

challenge link: 
https://www.codewars.com/kata/544675c6f971f7399a000e79

Solution:
var stringToNumber = function(str){
  return Number(str)
}

https://www.codewars.com/kata/5680781b6b7c2be860000036/train/javascript

We want to know the index of the vowels in a given word, for example, there are two vowels in the word super (the second and fourth letters).

So given a string "super", we should return a list of [2, 4].
NOTE: Vowels in this context refers to English Language Vowels - a e i o u y

NOTE: this is indexed from [1..n] (not zero indexed!)

date:
3/26/18

Title:
Simple String Indices

Challenge link:
https://www.codewars.com/kata/simple-string-indices/javascript

Solution:
function solve(str,index){
  let level = 0;
  let arr = str.split("");
  if(arr[index] !== "("){
    return -1;
  }
  for(let i = index; i <= arr.length; i++){
    if(level === 0 && i > index){
      return i - 1;
    }
    else if(arr[i] === "("){
      level++;
    }
    else if(arr[i] === ")"){
      level--;
    }
  }
}

date:
3/27/18

Title:
Upside Down numbers

Challenge link:
https://www.codewars.com/kata/upside-down-numbers

Solution:
function solve(x, y) {
  const invalid = ["2","3","4","5","7"]
  let candidates = []
  for(let i = x; i < y; i++) {
    let valid = true
    invalid.forEach(n => {
      if(i.toString().includes(n)) valid = false
    })
    if (valid) candidates.push(i.toString())
  }

  return candidates.filter(n => n == n.replace(/6/g, 's').replace(/9/g, '6').replace(/s/g, '9')
                            .split('').reverse().join('')).length

}

Date:
3/28/18

Title:
List drills longest word

Challenge link:
https://www.codewars.com/kata/thinkful-list-drills-longest-word

Solution:
function longest(words) {
  var winner = 0;
  for(let i = 0; i < words.length; i++) {
    if(words[i].length > winner) {
      winner = words[i].length;
    }
    }
  return winner;  
     
}

Date:
3/29/18

Title:
Line task area or perimeter

Challenge link:
https://www.codewars.com/kata/one-line-task-area-or-perimeter

Solution:
areaOrPerimeter=(l,w)=>l-w?(l+w)*2:l*w

Date
3/30/18

Title:
multiples of 3 or 5

Challenge link:
https://www.codewars.com/kata/multiples-of-3-or-5

Solution:
function solution(number){
  var sum = 0;
  
  for(var i = 1;i< number; i++){
    if(i % 3 == 0 || i % 5 == 0){
      sum += i
    }
  }
  return sum;
}

Date:
3/31/18

Title:
Where are my anagrams at?

Challenge link:
https://www.codewars.com/kata/523a86aa4230ebb5420001e1

Solution:
function anagrams(word, words) {
  var sortedWord = word.split("").sort().join("");
  return words.filter(function(e){
    return sortedWord === e.split("").sort().join("");
  });
}  

date:
4/1/18

title:
Tribonacci

challenge:
https://www.codewars.com/kata/tribonacci-sequence

solution:
function tribonacci(signature,n){  
  for (var i = 0; i < n-3; i++) { // iterate n times
    signature.push(signature[i] + signature[i+1] + signature[i+2]); // add last 3 array items and push to trib
  }
  return signature.slice(0, n); //return trib - length of n
}

date:
4/2/18

title:
How many unique consonants

challenge:
https://www.codewars.com/kata/how-many-unique-consonants

solution:
const countConsonants = (str) => {
  str = str.toLowerCase();
  const consonants = {b:1,c:1,d:1,f:1,g:1,h:1,j:1,k:1,l:1,m:1,n:1,p:1,q:1,r:1,s:1,t:1,v:1,w:1,x:1,y:1,z:1}
  consObj = {}
  for (let i = 0; i < str.length; i++) {
    if (consonants[str[i]]) {
      consObj[str[i]] = 1
    }
  }
  return Object.keys(consObj).length;
}

console.log(countConsonants('daaadddy')); //should return 2
console.log(countConsonants('oYGLB')) //should return 4
console.log(countConsonants('sillystring')) //should return 7
countConsonants('abcdefghi.jklmn123opqr"stuvwxyz0');

Date:
4/3/2018

title:
find an area

challenge:
https://www.codewars.com/kata/find-an-area

Solution:
function findArea(points) {
  var result = 0;
  // loop through the points
  for (let i = 0; i < points.length - 1; i++) {
    let b1 = points[i]['Y'];
    let b2 = points[i + 1]['Y'];
    let h = points[i + 1]['X'] - points[i]['X'];
    if (h < 0)
      h * -1;
    result = result + h * ((b1 + b2) / 2);
  }
  
  return result;
}

date:
4/4/2018

title:
Multiply characters

challenge:
https://www.codewars.com/kata/multiply-characters

solution:
function spam(number){
  return new Array(number + 1).join("hue");
}

date:
4/5/18

title:
find cracker

challenge:
https://www.codewars.com/kata/find-cracker

solution:
function findHack(arr) {
  var result = [];
  
  for(key in arr) {
    var sum = 0;
    var bonus = true;
    for(key2 in arr[key][2]) {
        var grade = arr[key][2][key2];
        switch(grade){
            case "A": 
                sum += 30;  
                break;
            case "B": 
                sum += 20;
                break;
            case "C": 
                sum += 10;
                bonus = false;
                break;
            case "D": 
                sum += 5;
                bonus = false;
                break;
            default:  
                sum += 0;  
                bonus = false;
                break;
        }
    }
    if( bonus && arr[key][2].length >= 5 ) sum += 20;
    if( sum != arr[key][1] ) result.push(arr[key][0]);
  }
  
  return result;
}

date:
4/6/18

title:
balance the tree

challenge:
https://www.codewars.com/kata/balance-the-tree

solution:
function isBalanced(root){
  let maxDist = -1;
    let minDist = -1;
    let curr = 0;
    function mesDist(node) {
        if (!(node.left === null || node.left === undefined)) {
            curr += 1;
            mesDist(node.left);
        }
        if (!(node.right === null || node.right === undefined)) {
            curr += 1;
            mesDist(node.right);
        }
        if ((node.left === null || node.left === undefined)&& (node.right === null || node.right === undefined)) {
        if (minDist < 0 || curr < minDist) minDist = curr;
        if (curr > maxDist) maxDist = curr;
        }
        curr-=1;
    }
    mesDist(root);
    return maxDist <= minDist+1;
}

date:
4/8/18

title:
frog jumping

challenge:
https://www.codewars.com/kata/frog-jumping

solution:
function solution(array) {
  var steps = 0, pos = 0;
  do{
    if (!array[pos])
      return -1;
    ++steps;
    var jump = array[pos];
    array[pos] = 0;
    pos += jump;
  } while (pos >= 0 && pos < array.length);
  return steps
}

date:
4/9/18

title:
compounds nouns and adjectives test

challenge:
https://www.codewars.com/kata/compound-nouns-common-nouns-and-adjectives-test

solution:
function part(word) {
  if (!word) return "neither";
  if (nouns.includes(word)) return "common";
  if (adjectives.includes(word)) return "adjective";
  for (let i = word.length-1; i > 0; i--) {
    if ((adjectives.includes(word.slice(0, i)) || nouns.includes(word.slice(0, i))) && nouns.includes(word.slice(i))) return "compound"
  }
  return "neither";
}

date:
4/12/18

title:

solution:

challenge:

date:

title:

challenge:

solution:

